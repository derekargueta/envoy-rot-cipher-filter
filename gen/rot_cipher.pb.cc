// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rot_cipher.proto

#include "rot_cipher.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace example {
class RotCipherDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RotCipher>
      _instance;
} _RotCipher_default_instance_;
}  // namespace example
namespace protobuf_rot_5fcipher_2eproto {
void InitDefaultsRotCipherImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::example::_RotCipher_default_instance_;
    new (ptr) ::example::RotCipher();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::example::RotCipher::InitAsDefaultInstance();
}

void InitDefaultsRotCipher() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRotCipherImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::example::RotCipher, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::example::RotCipher, rot_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::example::RotCipher, rot_header_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::example::RotCipher)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::example::_RotCipher_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "rot_cipher.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020rot_cipher.proto\022\007example\"2\n\tRotCipher"
      "\022\021\n\trot_value\030\001 \001(\005\022\022\n\nrot_header\030\002 \001(\tb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 87);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rot_cipher.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rot_5fcipher_2eproto
namespace example {

// ===================================================================

void RotCipher::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RotCipher::kRotValueFieldNumber;
const int RotCipher::kRotHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RotCipher::RotCipher()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rot_5fcipher_2eproto::InitDefaultsRotCipher();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:example.RotCipher)
}
RotCipher::RotCipher(const RotCipher& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rot_header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rot_header().size() > 0) {
    rot_header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rot_header_);
  }
  rot_value_ = from.rot_value_;
  // @@protoc_insertion_point(copy_constructor:example.RotCipher)
}

void RotCipher::SharedCtor() {
  rot_header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rot_value_ = 0;
  _cached_size_ = 0;
}

RotCipher::~RotCipher() {
  // @@protoc_insertion_point(destructor:example.RotCipher)
  SharedDtor();
}

void RotCipher::SharedDtor() {
  rot_header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RotCipher::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RotCipher::descriptor() {
  ::protobuf_rot_5fcipher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rot_5fcipher_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RotCipher& RotCipher::default_instance() {
  ::protobuf_rot_5fcipher_2eproto::InitDefaultsRotCipher();
  return *internal_default_instance();
}

RotCipher* RotCipher::New(::google::protobuf::Arena* arena) const {
  RotCipher* n = new RotCipher;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RotCipher::Clear() {
// @@protoc_insertion_point(message_clear_start:example.RotCipher)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rot_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rot_value_ = 0;
  _internal_metadata_.Clear();
}

bool RotCipher::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example.RotCipher)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rot_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rot_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rot_header = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rot_header()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rot_header().data(), static_cast<int>(this->rot_header().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "example.RotCipher.rot_header"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example.RotCipher)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example.RotCipher)
  return false;
#undef DO_
}

void RotCipher::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example.RotCipher)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rot_value = 1;
  if (this->rot_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rot_value(), output);
  }

  // string rot_header = 2;
  if (this->rot_header().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rot_header().data(), static_cast<int>(this->rot_header().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example.RotCipher.rot_header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rot_header(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:example.RotCipher)
}

::google::protobuf::uint8* RotCipher::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:example.RotCipher)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rot_value = 1;
  if (this->rot_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rot_value(), target);
  }

  // string rot_header = 2;
  if (this->rot_header().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rot_header().data(), static_cast<int>(this->rot_header().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "example.RotCipher.rot_header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rot_header(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.RotCipher)
  return target;
}

size_t RotCipher::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.RotCipher)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string rot_header = 2;
  if (this->rot_header().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rot_header());
  }

  // int32 rot_value = 1;
  if (this->rot_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rot_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RotCipher::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:example.RotCipher)
  GOOGLE_DCHECK_NE(&from, this);
  const RotCipher* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RotCipher>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:example.RotCipher)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:example.RotCipher)
    MergeFrom(*source);
  }
}

void RotCipher::MergeFrom(const RotCipher& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:example.RotCipher)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rot_header().size() > 0) {

    rot_header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rot_header_);
  }
  if (from.rot_value() != 0) {
    set_rot_value(from.rot_value());
  }
}

void RotCipher::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:example.RotCipher)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RotCipher::CopyFrom(const RotCipher& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.RotCipher)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RotCipher::IsInitialized() const {
  return true;
}

void RotCipher::Swap(RotCipher* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RotCipher::InternalSwap(RotCipher* other) {
  using std::swap;
  rot_header_.Swap(&other->rot_header_);
  swap(rot_value_, other->rot_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RotCipher::GetMetadata() const {
  protobuf_rot_5fcipher_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rot_5fcipher_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace example

// @@protoc_insertion_point(global_scope)
